trigger:
- none

variables:
  policiesDirectory: "$(System.DefaultWorkingDirectory)/policies/"
  assignmentsDirectory: "$(System.DefaultWorkingDirectory)/assignments/subscriptions/"
  serviceConnection: 'ServiceConnection'
  subscriptionId: '64681aa1-73cc-4155-aa97-caa0e4837412'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: deploy_policies
  displayName: 'Deploy Azure Policies'
  jobs:
    - job: Deploy
      displayName: 'Deploy Policy Definitions and Assignments'
      steps:
        - checkout: self

        - task: AzureCLI@2
          displayName: 'Deploy Policy Definitions and Assignments'
          inputs:
            azureSubscription: '$(serviceConnection)'
            scriptType: 'bash'
            scriptLocation: 'scriptPath'
            scriptPath: 'pipeline-scripts/deploy-policies.sh'
            arguments: '$(subscriptionId) $(policiesDirectory) $(assignmentsDirectory)/$(subscriptionId)'

        - task: AzureCLI@2
          displayName: 'Trigger Compliance Scan'
          inputs:
            azureSubscription: '$(serviceConnection)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              resourceGroups=$(az group list --subscription $(subscriptionId) --query "[].name" -o tsv)
              for rg in $resourceGroups; do
                az policy state trigger-scan --resource-group $rg &
              done
              wait

- stage: deploy_security_devops
  displayName: 'Deploy Security DevOps'
  jobs:
    - job: DeploySecurity
      displayName: 'Microsoft Security DevOps'
      steps:

        - script: cd src
          displayName: 'Change to src directory'

        - task: AdvancedSecurity-Codeql-Init@1
          displayName: 'Initialize CodeQL'
          inputs:
            languages: 'csharp'
            buildtype: 'none'
            enableAutomaticCodeQLInstall: true

        - task: NuGetCommand@2
          displayName: 'Restore NuGet Packages'
          inputs:
            command: 'restore'
            restoreSolution: '**/*.sln'
            feedsToUse: 'select'

        - task: DotNetCoreCLI@2
          displayName: 'Build .NET Project'
          inputs:
            command: 'build'

        - task: NuGetCommand@2
          displayName: 'Restore NuGet Packages'
          inputs:
            command: 'restore'
            restoreSolution: '**/*.sln'
            feedsToUse: 'select'
            

        - task: AdvancedSecurity-Dependency-Scanning@1
          inputs:
            autoFix: true

        - task: AdvancedSecurity-Codeql-Analyze@1

        - task: AdvancedSecurity-Publish@1