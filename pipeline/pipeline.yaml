trigger:
- master

pr:
- '*'

variables:
  policiesDirectory: "$(System.DefaultWorkingDirectory)/policies/"
  assignmentsDirectory: "$(System.DefaultWorkingDirectory)/assignments/subscriptions/"
  serviceConnection: 'SP'
  subscriptionId: '64681aa1-73cc-4155-aa97-caa0e4837412'
  sandboxSubscriptionId: 'b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: ApplyAzurePolicySandbox
  displayName: 'Apply Azure Policy Sandbox'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
  jobs:
    - job: ApplyAzurePolicySandbox
      displayName: 'Apply Azure Policy Sandbox'
      steps:
      - checkout: self
        clean: true

      - task: AzureCLI@2
        inputs:
          azureSubscription: '$(serviceConnection)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            export ENVIRONMENT="Sandbox"
            export SUB="$(sandboxSubscriptionId)"
            export policiesDirectory='$(policiesDirectory)'
            export assignmentsDirectory='$(assignmentsDirectory)'
            ./pipeline-scripts/sandbox-override.sh

      - task: AzureCLI@2
        inputs:
          azureSubscription: '$(serviceConnection)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az policy state trigger-scan --resource '/subscriptions/$(sandboxSubscriptionId)'

- stage: ApplyAzurePolicySubscription
  displayName: 'Apply Azure Policy Subscription'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
    - job: ApplyAzurePolicySubscription
      displayName: 'Apply Azure Policy Subscription'
      steps:
      - checkout: self
        clean: true

      - task: AzureCLI@2
        inputs:
          azureSubscription: '$(serviceConnection)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            export SUB="$(subscriptionId)"
            export policiesDirectory='$(policiesDirectory)'
            export assignmentsDirectory='$(assignmentsDirectory)'
            ./pipeline-scripts/sandbox-override.sh

      - task: AzureCLI@2
        inputs:
          azureSubscription: '$(serviceConnection)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az policy state trigger-scan --resource '/subscriptions/$(subscriptionId)'